---
title: "Class 9: Structural Bioinformatives 1"
author: "Isabel Hui - A16887852"
format: gfm
---

The main database for structural data is called the PDB (Protein Data Bank). Let's see what it contains:

Data from: https://www.rcsb.org/stats

Read this into R:
```{r}
pdbdb <- read.csv("pdb_stats.csv")
pdbdb
```

> Q1: What percentage of structures in the PDB are solved by X-Ray and Electron Microscopy.

```{r}
pdbdb$Total
```

I need to remove the comma and convert to numeric to do math:

```{r}
as.numeric(sub(",", "", pdbdb$Total))
```

I can also turn this into a fucntion to fix the whole table or any future table I read like this:

```{r}
x <- pdbdb$Total
as.numeric(sub(",", "", pdbdb$Total))
```

```{r}
comma2numeric <- function(x) {
  as.numeric(sub(",", "", pdbdb$Total))
}
```

Test it:

```{r}
comma2numeric(pdbdb$X.ray)
```

```{r}
apply(pdbdb, 2, comma2numeric)
```

(Or try a different read/import function:)

```{r}
#/ message: false

library(readr)
pdbdb <- read_csv("pdb_stats.csv")
```

```{r}
sum(pdbdb$Total)
```

For percentage of structures solved by X-ray and electromicroscopy (EM):

```{r}
sum(pdbdb$`X-ray`)/sum(pdbdb$Total) * 100
```

```{r}
sum(pdbdb$EM)/sum(pdbdb$Total) * 100
```



> Q2: What proportion of structures in the PDB are protein?

```{r}
pdbdb$Total[1]/sum(pdbdb$Total) * 100
```


> Q3: Type HIV in the PDB website search box on the home page and determine how many HIV-1 protease structures are in the current PDB?

2,294

## Mol*

Using the link: https://molstar.org/viewer/

We will use PDB code: *1HSG*

![A first image from molstar.](1HSG.png)

Some more custom images:

![The all important catalytic ASP25 amino acids.](1HSG(1).png)

![Surface display showing Merk compound in peptide bonding pocket.](1HSG(2).png)


## Questions: The important role of water

> Q4: Water molecules normally have 3 atoms. Why do we see just one atom per water molecule in this structure?

This is because this makes the visual easier; a lot of this modeling over-simplifies for the purpose of aesthetics and ease of understanding.

> Q5: There is a critical “conserved” water molecule in the binding site. Can you identify this water molecule? What residue number does this water molecule have

This "conserved" water molecule is HOH, water 400. It helps to stabilize protein and ligand interactions.

> Q6: Generate and save a figure clearly showing the two distinct chains of HIV-protease along with the ligand. You might also consider showing the catalytic residues ASP 25 in each chain and the critical water (we recommend “Ball & Stick” for these side-chains). Add this figure to your Quarto document.

![A ball and stick representation.](1HSG(3).png)

![A close up of ligand binding between the monomers.](1HSG(4).png)


## The Bio3D Package

The bio3D package allows us to do all sorts of structural bioinformatics work in R.

Let's start with hw it can read these PDB files:

```{r}
library(bio3d)

pdb <- read.pdb("1hsg")
pdb
```

```{r}
attributes(pdb)
```

```{r}
head(pdb$atom)
```

```{r}
pdbseq(pdb)
```

> Q7: How many amino acid residues are there in this pdb object? 

There is one calpha per amino acid, so counting the calpha gives us:

```{r}
sum(pdb$calpha)
```

Can also count the length of items in pdb:

```{r}
length(pdbseq(pdb))
```

> Q8: Name one of the two non-protein residues? 

HOH and MK1

> Q9: How many protein chains are in this structure? 

2

```{r}
unique(pdb$atom$chain)
```


## Predicting Functional Motions of a Single Structure

Let's do a bioinformatics prediction of functional motions - i.e., the movements that one of these molecules needs to make to do its stuff.

```{r}
adk <- read.pdb("6s36")
adk
```

```{r}
# Perform flexibility prediction

m <- nma(adk)
plot(m)
```

Write out multi-model PDB file (trajectory) that we can use to make an animation of the predicted motions.

```{r}
mktrj(m, file="adk.pdb")
```

I can open this in Mol* to play the trajectory...

## Comparative Analysis of Protein Structures

```{r}
library(bio3d)
```

Here we will find and analyze all ADK structures in the PDB database.

We will start with a single database accession ID: "1ake_A"

```{r}
id <- "1ake_A"
aa <- get.seq(id)
```

I ran these in the R brain/console:
install.packages("BiocManager")
BiocManager::install("msa")

> Q10. Which of the packages above is found only on BioConductor and not CRAN? 

The `msa` package is from BioConductor/

> Q13. How many amino acids are in this sequence, i.e. how long is this sequence? 

```{r}
length(aa)
```

```{r}
attributes(aa)
```

```{r}
ncol(aa$ali)
```

```{r}
#b <- blast.pdb(aa)
#hits <- plot(b)
#head(hits$pdb.id)
```

Pre-calculated results:

```{r}
hits <- NULL
hits$pdb.id <- c('1AKE_A','6S36_A','6RZE_A','3HPR_A','1E4V_A','5EJE_A','1E4Y_A','3X2S_A','6HAP_A','6HAM_A','4K46_A','3GMT_A','4PZL_A')
```

```{r}
files <- get.pdb(hits$pdb.id, path="pdbs", split=TRUE, gzip=TRUE)
```

Next we will use the pdbaln() function to align and also optionally fit (i.e. superpose) the identified PDB structures.

```{r}
pdbs <- pdbaln(files, fit = TRUE, exefile="msa")
```

```{r}
pdbs
```

## Principal Component Analysis

```{r}
pc.xray <- pca(pdbs)
plot(pc.xray)
```

To visualize the major structural variations in the ensemble the function mktrj() can be used to generate a trajectory PDB file by interpolating along a give PC (eigenvector):

```{r}
pc1 <- mktrj(pc.xray, pc=1, file="pc_1.pdb")
```

```{r}
pc.xray <- pca(pdbs)
```

```{r}
plot(pc.xray, pc.axes = c(1,2))
```

```{r}
uniprot <- 248838887
pdb <- 195610

pdb/uniprot *100
```




